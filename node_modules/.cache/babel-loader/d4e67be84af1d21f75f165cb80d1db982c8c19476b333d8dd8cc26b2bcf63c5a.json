{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Chat-App-React\\\\src\\\\components\\\\MessageContainer.js\",\n  _s = $RefreshSig$();\n// Importing necessary React hooks, components, and styles\nimport { useState, useEffect, useRef } from \"react\";\nimport Message from \"./Message\";\nimport { userImage, getRandomId } from \"./\";\nimport \"../styles/MessageContainer.css\";\n\n// ---- Component for Displaying Messages in a Conversation ----\n\n// Functional component representing a container for displaying messages in a conversation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageContainer(props) {\n  _s();\n  // Destructuring props to extract necessary data\n  const {\n    getConversationData,\n    currentUser,\n    getUserData,\n    onSend\n  } = props;\n\n  // State hook to manage conversation data\n  const [conversationData, setConversationData] = useState();\n\n  // Ref to remember the bottom scroll element\n  const bottomRef = useRef(null);\n\n  // Effect hook to update conversation data when it changes\n  useEffect(() => {\n    setConversationData(getConversationData());\n  }, [getConversationData, conversationData]);\n\n  // Show empty message container if conversation data is undefined\n  if (conversationData === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get user data for the contact in the conversation\n  const userData = getUserData(conversationData.contactId);\n\n  // Handle when the user sends a new text message in the conversation\n  function handleSendData() {\n    if (document.getElementById(\"message-input\").value === \"\") {\n      return;\n    }\n    let message = {\n      id: getRandomId(10, 999),\n      userId: currentUser,\n      messageText: document.getElementById(\"message-input\").value\n    };\n    document.getElementById(\"message-input\").value = \"\";\n\n    // Callback to parent component for sending the message\n    onSend(conversationData.conversationId, message);\n  }\n\n  // Handle key press events (Enter key) for sending messages\n  function handleKeyPress(evt) {\n    if (evt.keyCode !== 13) {\n      return;\n    }\n    handleSendData();\n\n    // Trigger smooth scroll to bottom when sending a message\n    send();\n  }\n\n  // Scroll to the bottom of the message area\n  function send() {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }\n\n  // Render the MessageContainer component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-bg\",\n      \"data-asset-chat-background-dark\": \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile-pic\",\n          width: \"60px\",\n          height: \"60px\",\n          src: userImage(userData),\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: userData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-area\",\n        children: [conversationData.messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          type: message.userId === currentUser ? \"send\" : \"receive\",\n          id: message.userId,\n          content: message.messageText,\n          getUserData: getUserData\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message-input\",\n          placeholder: \"Type a message\",\n          onKeyUp: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleSendData();\n            send();\n            send();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"31\",\n            height: \"31\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            className: \"feather feather-send\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: \"22\",\n              y1: \"2\",\n              x2: \"11\",\n              y2: \"13\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"22 2 15 22 11 13 2 9 22 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the MessageContainer component as the default export\n_s(MessageContainer, \"ZNkvTSozs2s39DoRfSpHil94sy0=\");\n_c = MessageContainer;\nexport default MessageContainer;\nvar _c;\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"names":["useState","useEffect","useRef","Message","userImage","getRandomId","jsxDEV","_jsxDEV","MessageContainer","props","_s","getConversationData","currentUser","getUserData","onSend","conversationData","setConversationData","bottomRef","undefined","className","fileName","_jsxFileName","lineNumber","columnNumber","userData","contactId","handleSendData","document","getElementById","value","message","id","userId","messageText","conversationId","handleKeyPress","evt","keyCode","send","_bottomRef$current","current","scrollIntoView","behavior","children","width","height","src","alt","name","messages","map","type","content","ref","placeholder","onKeyUp","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Chat-App-React/src/components/MessageContainer.js"],"sourcesContent":["// Importing necessary React hooks, components, and styles\nimport { useState, useEffect, useRef } from \"react\";\nimport Message from \"./Message\";\nimport { userImage, getRandomId } from \"./\";\nimport \"../styles/MessageContainer.css\";\n\n// ---- Component for Displaying Messages in a Conversation ----\n\n// Functional component representing a container for displaying messages in a conversation\nfunction MessageContainer(props) {\n  // Destructuring props to extract necessary data\n  const { getConversationData, currentUser, getUserData, onSend } = props;\n\n  // State hook to manage conversation data\n  const [conversationData, setConversationData] = useState();\n\n  // Ref to remember the bottom scroll element\n  const bottomRef = useRef(null);\n\n  // Effect hook to update conversation data when it changes\n  useEffect(() => {\n    setConversationData(getConversationData());\n  }, [getConversationData, conversationData]);\n\n  // Show empty message container if conversation data is undefined\n  if (conversationData === undefined) {\n    return <div className=\"message-container\"></div>;\n  }\n\n  // Get user data for the contact in the conversation\n  const userData = getUserData(conversationData.contactId);\n\n  // Handle when the user sends a new text message in the conversation\n  function handleSendData() {\n    if (document.getElementById(\"message-input\").value === \"\") {\n      return;\n    }\n\n    let message = {\n      id: getRandomId(10, 999),\n      userId: currentUser,\n      messageText: document.getElementById(\"message-input\").value,\n    };\n\n    document.getElementById(\"message-input\").value = \"\";\n\n    // Callback to parent component for sending the message\n    onSend(conversationData.conversationId, message);\n  }\n\n  // Handle key press events (Enter key) for sending messages\n  function handleKeyPress(evt) {\n    if (evt.keyCode !== 13) {\n      return;\n    }\n\n    handleSendData();\n\n    // Trigger smooth scroll to bottom when sending a message\n    send();\n  }\n\n  // Scroll to the bottom of the message area\n  function send() {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  // Render the MessageContainer component\n  return (\n    <div className=\"message-container\">\n      <div className=\"message-bg\" data-asset-chat-background-dark=\"true\">\n        {/* Container info displaying user profile picture and name */}\n        <div className=\"message-container-info\">\n          <img\n            className=\"profile-pic\"\n            width=\"60px\"\n            height=\"60px\"\n            src={userImage(userData)}\n            alt=\"...\"\n          />\n          <strong>{userData.name}</strong>\n        </div>\n        \n        {/* Area for displaying messages */}\n        <div className=\"message-area\">\n          {conversationData.messages.map((message) => (\n            <Message\n              key={message.id}\n              type={message.userId === currentUser ? \"send\" : \"receive\"}\n              id={message.userId}\n              content={message.messageText}\n              getUserData={getUserData}\n            />\n          ))}\n          \n          {/* Ref for bottom scroll element */}\n          <div ref={bottomRef} />\n        </div>\n        \n        {/* Input area for typing and sending messages */}\n        <div className=\"message-input\">\n          <textarea\n            id=\"message-input\"\n            placeholder=\"Type a message\"\n            onKeyUp={handleKeyPress}\n          />\n          \n          {/* Button for sending messages */}\n          <button\n            onClick={() => {\n              handleSendData();\n              send();\n              send();\n            }}\n          >\n            {/* Send icon */}\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"31\"\n              height=\"31\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-send\"\n            >\n              <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n              <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Export the MessageContainer component as the default export\nexport default MessageContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Chat-App-React\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\n// Importing necessary dependencies and styles\nimport { useState, useEffect } from \"react\";\nimport \"../styles/App.css\";\n\n// Importing dummy data for contacts and conversations\nimport contactList from \"../DummyData/dummyContacts.json\";\nimport conversationList from \"../DummyData/dummyConversations.json\";\n\n// Importing components used in the main App component\nimport Conversations from \"./Conversations\";\nimport MessageContainer from \"./MessageContainer\";\nimport NewConversation from \"./NewConversation\";\n\n// Main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Dummy Logged in User\n  const loggedInUser = \"myUser\";\n\n  // State Hooks for Contacts, Existing Conversations, Current Conversation Id, and Add Conversation Dialog\n  const [contacts, setContacts] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(\"\");\n  const [addingConversation, setAddingConversation] = useState(false);\n\n  // Set the states with Dummy Data from JSON for Contacts and Conversations\n  useEffect(() => {\n    setContacts(contactList);\n    setConversations(conversationList);\n  }, []);\n\n  // Returns User Data for a given id from Contacts\n  function getUserData(userId) {\n    const userIndex = contacts.findIndex(user => user.id === userId);\n    return contacts[userIndex];\n  }\n\n  // Returns Conversation Data for the currently selected Conversation by its ID\n  function getConversationData() {\n    const convIndex = conversations.findIndex(conv => conv.conversationId === currentConversationId);\n    return conversations[convIndex];\n  }\n\n  // Set Current Conversation Id\n  function updateCurrentConversationId(id) {\n    setCurrentConversationId(id);\n  }\n\n  // Handle Update/Add new messages in the given conversation\n  function updateConversationMessages(conversationId, message) {\n    const conversationIndex = conversations.findIndex(conv => conv.conversationId === conversationId);\n    let updatedConversation = [...conversations];\n    updatedConversation[conversationIndex].messages.push(message);\n    console.log(updatedConversation);\n    setConversations(updatedConversation);\n  }\n\n  // Handle Show/Add New Conversation of a contact\n  function handleUpdateConversation(newConversation) {\n    let updatedConversation = [...conversations];\n    const conversationIndex = updatedConversation.findIndex(conv => conv.contactId === newConversation.contactId);\n    if (conversationIndex === -1) {\n      updatedConversation.push(newConversation);\n      setConversations(updatedConversation);\n    } else {\n      setCurrentConversationId(updatedConversation[conversationIndex].conversationId);\n    }\n    setAddingConversation(false);\n  }\n\n  // Rendering the main container with Conversations, NewConversation, and MessageContainer components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [addingConversation &&\n    /*#__PURE__*/\n    // Render the NewConversation component when addingConversation state is true\n    _jsxDEV(NewConversation, {\n      contacts: contacts,\n      currentUser: loggedInUser,\n      showNewConvDialog: setAddingConversation,\n      updateConversation: handleUpdateConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Conversations, {\n      conversationData: conversations,\n      currentUser: loggedInUser,\n      getUserData: getUserData,\n      updateConversationId: updateCurrentConversationId,\n      showNewConvDialog: setAddingConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      getConversationData: getConversationData,\n      currentUser: loggedInUser,\n      getUserData: getUserData,\n      onSend: updateConversationMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the App component as the default export\n_s(App, \"d+R+Y76e0ObAX+jdq4he0a0/Ne8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","contactList","conversationList","Conversations","MessageContainer","NewConversation","jsxDEV","_jsxDEV","App","_s","loggedInUser","contacts","setContacts","conversations","setConversations","currentConversationId","setCurrentConversationId","addingConversation","setAddingConversation","getUserData","userId","userIndex","findIndex","user","id","getConversationData","convIndex","conv","conversationId","updateCurrentConversationId","updateConversationMessages","message","conversationIndex","updatedConversation","messages","push","console","log","handleUpdateConversation","newConversation","contactId","className","children","currentUser","showNewConvDialog","updateConversation","fileName","_jsxFileName","lineNumber","columnNumber","conversationData","updateConversationId","onSend","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Chat-App-React/src/components/App.js"],"sourcesContent":["// Importing necessary dependencies and styles\nimport { useState, useEffect } from \"react\";\nimport \"../styles/App.css\";\n\n// Importing dummy data for contacts and conversations\nimport contactList from \"../DummyData/dummyContacts.json\";\nimport conversationList from \"../DummyData/dummyConversations.json\";\n\n// Importing components used in the main App component\nimport Conversations from \"./Conversations\";\nimport MessageContainer from \"./MessageContainer\";\nimport NewConversation from \"./NewConversation\";\n\n// Main App component\nfunction App() {\n  // Dummy Logged in User\n  const loggedInUser = \"myUser\";\n\n  // State Hooks for Contacts, Existing Conversations, Current Conversation Id, and Add Conversation Dialog\n  const [contacts, setContacts] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(\"\");\n  const [addingConversation, setAddingConversation] = useState(false);\n\n  // Set the states with Dummy Data from JSON for Contacts and Conversations\n  useEffect(() => {\n    setContacts(contactList);\n    setConversations(conversationList);\n  }, []);\n\n  // Returns User Data for a given id from Contacts\n  function getUserData(userId) {\n    const userIndex = contacts.findIndex((user) => user.id === userId);\n    return contacts[userIndex];\n  }\n\n  // Returns Conversation Data for the currently selected Conversation by its ID\n  function getConversationData() {\n    const convIndex = conversations.findIndex(\n      (conv) => conv.conversationId === currentConversationId\n    );\n    return conversations[convIndex];\n  }\n\n  // Set Current Conversation Id\n  function updateCurrentConversationId(id) {\n    setCurrentConversationId(id);\n  }\n\n  // Handle Update/Add new messages in the given conversation\n  function updateConversationMessages(conversationId, message) {\n    const conversationIndex = conversations.findIndex(\n      (conv) => conv.conversationId === conversationId\n    );\n\n    let updatedConversation = [...conversations];\n    updatedConversation[conversationIndex].messages.push(message);\n\n    console.log(updatedConversation);\n\n    setConversations(updatedConversation);\n  }\n\n  // Handle Show/Add New Conversation of a contact\n  function handleUpdateConversation(newConversation) {\n    let updatedConversation = [...conversations];\n    const conversationIndex = updatedConversation.findIndex(\n      (conv) => conv.contactId === newConversation.contactId\n    );\n\n    if (conversationIndex === -1) {\n      updatedConversation.push(newConversation);\n      setConversations(updatedConversation);\n    } else {\n      setCurrentConversationId(\n        updatedConversation[conversationIndex].conversationId\n      );\n    }\n\n    setAddingConversation(false);\n  }\n\n  // Rendering the main container with Conversations, NewConversation, and MessageContainer components\n  return (\n    <div className=\"main-container\">\n      {addingConversation && (\n        // Render the NewConversation component when addingConversation state is true\n        <NewConversation\n          contacts={contacts}\n          currentUser={loggedInUser}\n          showNewConvDialog={setAddingConversation}\n          updateConversation={handleUpdateConversation}\n        />\n      )}\n\n      {/* Render the Conversations component */}\n      <Conversations\n        conversationData={conversations}\n        currentUser={loggedInUser}\n        getUserData={getUserData}\n        updateConversationId={updateCurrentConversationId}\n        showNewConvDialog={setAddingConversation}\n      />\n\n      {/* Render the MessageContainer component */}\n      <MessageContainer\n        getConversationData={getConversationData}\n        currentUser={loggedInUser}\n        getUserData={getUserData}\n        onSend={updateConversationMessages}\n      />\n    </div>\n  );\n}\n\n// Export the App component as the default export\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
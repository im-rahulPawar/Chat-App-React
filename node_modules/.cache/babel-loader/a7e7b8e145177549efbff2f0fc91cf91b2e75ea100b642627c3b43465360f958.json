{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Chat-App-React\\\\src\\\\components\\\\Conversations.js\",\n  _s = $RefreshSig$();\n// Importing styles for the Conversations component\nimport \"../styles/Conversations.css\";\n// Importing necessary React hooks from the 'react' library\nimport { useState, useEffect } from \"react\";\n// Importing the ConversationCard component\nimport ConversationCard from \"./ConversationCard\";\n\n// ---- Component for Displaying Existing Conversations ----\n\n// Functional component representing the list of existing conversations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversations(props) {\n  _s();\n  // Destructuring props to extract necessary data\n  const {\n    conversationData,\n    getUserData,\n    updateConversationId,\n    currentUser,\n    showNewConvDialog\n  } = props;\n\n  // State hook for managing the list of conversations\n  const [conversations, setConversations] = useState(props.conversationData);\n\n  // Extracting user data for each conversation\n  const contacts = conversationData.map(conv => getUserData(conv.contactId));\n\n  // Effect hook to update conversations when the data is modified\n  useEffect(() => {\n    setConversations(conversationData);\n  }, [conversationData]);\n\n  // Function to handle searching conversations by user name\n  function handleSearch(evt) {\n    // Array to store search results\n    let searchResults = [];\n\n    // Check if the search input is not empty and has more than one character\n    if (evt.target.value !== \"\" && evt.target.value.length > 1) {\n      // Iterate through contacts to find matching names\n      contacts.forEach(element => {\n        if (element.name.toLowerCase().includes(evt.target.value.toLowerCase())) {\n          // Find the conversation associated with the contact\n          let result = conversations.find(conv => conv !== undefined && conv.contactId === element.id);\n          // Add unique results to the searchResults array\n          if (!searchResults.includes(result)) {\n            searchResults.push(result);\n          }\n        }\n      });\n\n      // Update the state with search results\n      setConversations(searchResults);\n    } else {\n      // Reset the state to show all conversations when search is cleared\n      setConversations(conversationData);\n    }\n  }\n\n  // Render the Conversations component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        className: \"feather feather-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"11\",\n          cy: \"11\",\n          r: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"21\",\n          y1: \"21\",\n          x2: \"16.65\",\n          y2: \"16.65\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-conversation\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" CONVERSATIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        className: \"feather feather-plus\",\n        onClick: () => showNewConvDialog(true),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"12\",\n          y1: \"5\",\n          x2: \"12\",\n          y2: \"19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"5\",\n          y1: \"12\",\n          x2: \"19\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-list\",\n      children: conversations.map(conversation => {\n        if (conversation === undefined) return \"\";\n        return /*#__PURE__*/_jsxDEV(ConversationCard, {\n          data: conversation,\n          getUser: getUserData,\n          updateConversationId: updateConversationId,\n          currentUser: currentUser,\n          newConversation: false\n        }, conversation.conversationId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the Conversations component as the default export\n_s(Conversations, \"OBx1xQR9sLZL6MxByWtD0OESXio=\");\n_c = Conversations;\nexport default Conversations;\nvar _c;\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"names":["useState","useEffect","ConversationCard","jsxDEV","_jsxDEV","Conversations","props","_s","conversationData","getUserData","updateConversationId","currentUser","showNewConvDialog","conversations","setConversations","contacts","map","conv","contactId","handleSearch","evt","searchResults","target","value","length","forEach","element","name","toLowerCase","includes","result","find","undefined","id","push","className","children","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","type","placeholder","onChange","onClick","style","cursor","conversation","data","getUser","newConversation","conversationId","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Chat-App-React/src/components/Conversations.js"],"sourcesContent":["// Importing styles for the Conversations component\nimport \"../styles/Conversations.css\";\n// Importing necessary React hooks from the 'react' library\nimport { useState, useEffect } from \"react\";\n// Importing the ConversationCard component\nimport ConversationCard from \"./ConversationCard\";\n\n// ---- Component for Displaying Existing Conversations ----\n\n// Functional component representing the list of existing conversations\nfunction Conversations(props) {\n  // Destructuring props to extract necessary data\n  const {\n    conversationData,\n    getUserData,\n    updateConversationId,\n    currentUser,\n    showNewConvDialog,\n  } = props;\n\n  // State hook for managing the list of conversations\n  const [conversations, setConversations] = useState(props.conversationData);\n\n  // Extracting user data for each conversation\n  const contacts = conversationData.map((conv) => getUserData(conv.contactId));\n\n  // Effect hook to update conversations when the data is modified\n  useEffect(() => {\n    setConversations(conversationData);\n  }, [conversationData]);\n\n  // Function to handle searching conversations by user name\n  function handleSearch(evt) {\n    // Array to store search results\n    let searchResults = [];\n\n    // Check if the search input is not empty and has more than one character\n    if (evt.target.value !== \"\" && evt.target.value.length > 1) {\n      // Iterate through contacts to find matching names\n      contacts.forEach((element) => {\n        if (\n          element.name.toLowerCase().includes(evt.target.value.toLowerCase())\n        ) {\n          // Find the conversation associated with the contact\n          let result = conversations.find(\n            (conv) => conv !== undefined && conv.contactId === element.id\n          );\n          // Add unique results to the searchResults array\n          if (!searchResults.includes(result)) {\n            searchResults.push(result);\n          }\n        }\n      });\n\n      // Update the state with search results\n      setConversations(searchResults);\n    } else {\n      // Reset the state to show all conversations when search is cleared\n      setConversations(conversationData);\n    }\n  }\n\n  // Render the Conversations component\n  return (\n    <div className=\"conversation-container\">\n      {/* Search bar */}\n      <div className=\"search\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"feather feather-search\"\n        >\n          <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n          <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n        </svg>\n        <input type=\"text\" placeholder=\"Search\" onChange={handleSearch} />\n      </div>\n\n      {/* Add conversation button */}\n      <div className=\"add-conversation\">\n        <strong> CONVERSATIONS</strong>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"feather feather-plus\"\n          onClick={() => showNewConvDialog(true)}\n          style={{ cursor: \"pointer\" }}\n        >\n          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n        </svg>\n      </div>\n\n      {/* List of conversation cards */}\n      <div className=\"conversation-list\">\n        {conversations.map((conversation) => {\n          if (conversation === undefined) return \"\";\n\n          return (\n            <ConversationCard\n              key={conversation.conversationId}\n              data={conversation}\n              getUser={getUserData}\n              updateConversationId={updateConversationId}\n              currentUser={currentUser}\n              newConversation={false}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\n// Export the Conversations component as the default export\nexport default Conversations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
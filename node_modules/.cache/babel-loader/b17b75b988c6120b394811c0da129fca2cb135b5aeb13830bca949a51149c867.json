{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Chat-App-React\\\\src\\\\components\\\\ConversationCard.js\";\n// Importing the userImage function from the root directory and the corresponding styles\nimport { userImage } from \"./\";\nimport \"../styles/ConversationCard.css\";\n\n// ---- Card Component for every Existing Conversation ----\n\n// Functional component representing a card for an existing conversation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConversationCard(props) {\n  // Destructuring props to extract necessary data\n  const {\n    data,\n    getUser,\n    updateConversationId,\n    currentUser\n  } = props;\n\n  // Get User Data of the given Contact Id from Parent State Hook\n  const userData = getUser(data.contactId);\n\n  // Function to retrieve the last message sent in this conversation\n  function lastMessage() {\n    // Default value for the last message text\n    let lastText = \"\";\n\n    // Check if there are messages in the conversation\n    if (data.messages.length > 0) {\n      // Get the last message\n      const message = data.messages[data.messages.length - 1];\n\n      // Determine if the last message was sent by the current user\n      lastText = message.userId === currentUser ? \"You: \" + message.messageText : message.messageText;\n    }\n    return lastText;\n  }\n\n  // Render the ConversationCard component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conv-card-container\",\n    onClick: () => updateConversationId(data.conversationId),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"profile-pic\",\n      width: \"65px\",\n      height: \"65px\",\n      src: userImage(userData),\n      alt: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conv-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: userData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: lastMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n// Export the ConversationCard component as the default export\n_c = ConversationCard;\nexport default ConversationCard;\nvar _c;\n$RefreshReg$(_c, \"ConversationCard\");","map":{"version":3,"names":["userImage","jsxDEV","_jsxDEV","ConversationCard","props","data","getUser","updateConversationId","currentUser","userData","contactId","lastMessage","lastText","messages","length","message","userId","messageText","className","onClick","conversationId","children","width","height","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Chat-App-React/src/components/ConversationCard.js"],"sourcesContent":["// Importing the userImage function from the root directory and the corresponding styles\nimport { userImage } from \"./\";\nimport \"../styles/ConversationCard.css\";\n\n// ---- Card Component for every Existing Conversation ----\n\n// Functional component representing a card for an existing conversation\nfunction ConversationCard(props) {\n  // Destructuring props to extract necessary data\n  const { data, getUser, updateConversationId, currentUser } = props;\n\n  // Get User Data of the given Contact Id from Parent State Hook\n  const userData = getUser(data.contactId);\n\n  // Function to retrieve the last message sent in this conversation\n  function lastMessage() {\n    // Default value for the last message text\n    let lastText = \"\";\n\n    // Check if there are messages in the conversation\n    if (data.messages.length > 0) {\n      // Get the last message\n      const message = data.messages[data.messages.length - 1];\n\n      // Determine if the last message was sent by the current user\n      lastText =\n        message.userId === currentUser\n          ? \"You: \" + message.messageText\n          : message.messageText;\n    }\n\n    return lastText;\n  }\n\n  // Render the ConversationCard component\n  return (\n    <div\n      className=\"conv-card-container\"\n      onClick={() => updateConversationId(data.conversationId)}\n    >\n      {/* Display the user profile picture */}\n      <img\n        className=\"profile-pic\"\n        width=\"65px\"\n        height=\"65px\"\n        src={userImage(userData)}\n        alt=\"...\"\n      />\n      {/* Display the conversation information */}\n      <div className=\"conv-info\">\n        {/* Display the user's name */}\n        <strong>{userData.name}</strong>\n        {/* Display the last message in the conversation */}\n        <small>{lastMessage()}</small>\n      </div>\n    </div>\n  );\n}\n\n// Export the ConversationCard component as the default export\nexport default ConversationCard;\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,IAAI;AAC9B,OAAO,gCAAgC;;AAEvC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B;EACA,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,oBAAoB;IAAEC;EAAY,CAAC,GAAGJ,KAAK;;EAElE;EACA,MAAMK,QAAQ,GAAGH,OAAO,CAACD,IAAI,CAACK,SAAS,CAAC;;EAExC;EACA,SAASC,WAAWA,CAAA,EAAG;IACrB;IACA,IAAIC,QAAQ,GAAG,EAAE;;IAEjB;IACA,IAAIP,IAAI,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5B;MACA,MAAMC,OAAO,GAAGV,IAAI,CAACQ,QAAQ,CAACR,IAAI,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC;;MAEvD;MACAF,QAAQ,GACNG,OAAO,CAACC,MAAM,KAAKR,WAAW,GAC1B,OAAO,GAAGO,OAAO,CAACE,WAAW,GAC7BF,OAAO,CAACE,WAAW;IAC3B;IAEA,OAAOL,QAAQ;EACjB;;EAEA;EACA,oBACEV,OAAA;IACEgB,SAAS,EAAC,qBAAqB;IAC/BC,OAAO,EAAEA,CAAA,KAAMZ,oBAAoB,CAACF,IAAI,CAACe,cAAc,CAAE;IAAAC,QAAA,gBAGzDnB,OAAA;MACEgB,SAAS,EAAC,aAAa;MACvBI,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbC,GAAG,EAAExB,SAAS,CAACS,QAAQ,CAAE;MACzBgB,GAAG,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEF3B,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAG,QAAA,gBAExBnB,OAAA;QAAAmB,QAAA,EAASZ,QAAQ,CAACqB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAEhC3B,OAAA;QAAAmB,QAAA,EAAQV,WAAW,CAAC;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAE,EAAA,GApDS5B,gBAAgB;AAqDzB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}